name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Create .env files
      run: |
        echo "MONGODB_AUTH_URI=mongodb://localhost:27017/test_auth" >> auth/.env
        echo "JWT_SECRET=test-jwt-secret-key" >> auth/.env
        echo "MONGODB_PRODUCT_URI=mongodb://localhost:27017/test_product" >> product/.env
        echo "JWT_SECRET=test-jwt-secret-key" >> product/.env
        echo "RABBITMQ_URI=amqp://localhost:5672" >> product/.env
        echo "LOGIN_TEST_USER=testuser" >> product/.env
        echo "LOGIN_TEST_PASSWORD=testpassword" >> product/.env

    - name: Wait for services to be ready
      run: |
        echo "Waiting for MongoDB..."
        timeout 60 bash -c 'until nc -z localhost 27017; do sleep 1; done'
        echo "Waiting for RabbitMQ..."
        timeout 60 bash -c 'until nc -z localhost 5672; do sleep 1; done'
        echo "Services are ready!"

    - name: Install root dependencies
      run: npm install

    - name: Install auth dependencies
      working-directory: auth
      run: |
        # Install production dependencies first
        npm install
        # Install test dependencies (CommonJS compatible versions)
        npm install --save-dev chai@4.3.4 chai-http@4.3.0 mocha@9.2.2 dotenv@16.0.3

    - name: Install product dependencies  
      working-directory: product
      run: |
        npm install
        # Ensure compatible test library versions
        npm install --save chai@4.3.4 chai-http@4.3.0 mocha@9.2.2

    - name: Install api-gateway dependencies
      working-directory: api-gateway
      run: npm install

    - name: Install order dependencies
      working-directory: order
      run: npm install

    - name: Run auth service tests
      working-directory: auth
      run: npm test

    - name: Run product service tests
      working-directory: product
      run: |
        # Start auth service in background for product tests
        cd ../auth && npm start &
        AUTH_PID=$!
        cd ../product
        sleep 5
        npm test
        kill $AUTH_PID || true
