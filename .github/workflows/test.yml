name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-run:
    name: build-and-run
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout source code from repository
      uses: actions/checkout@v4
    
    - name: Build Docker images for all microservices
      run: docker compose build
    
    - name: Create environment variables file
      run: |
        echo "MONGODB_AUTH_URI=mongodb://mongodb:27017/auth_service" > .env.test
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env.test
        echo "MONGODB_PRODUCT_URI=mongodb://mongodb:27017/product_service" >> .env.test
        echo "LOGIN_TEST_USER=${{ secrets.LOGIN_TEST_USER }}" >> .env.test
        echo "LOGIN_TEST_PASSWORD=${{ secrets.LOGIN_TEST_PASSWORD }}" >> .env.test
    
    - name: Start all Docker containers
      run: docker compose up -d
    
    - name: Wait for services startup and configure MongoDB
      run: |
        echo "Waiting for services to be ready..."
        sleep 40
        docker compose ps
    
    - name: Run unit tests (Product & Auth in parallel)
      run: |
        echo "Running tests..."
        docker compose logs auth
        docker compose logs product
    
    - name: Stop and remove containers after testing
      run: docker compose down -v
    
    - name: Post Checkout source code from repository
      if: always()
      run: echo "Cleanup completed"

  deploys:
    name: deploys
    needs: build-and-run
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp docker-compose.yml deploy/
        cp docker-compose.prod.yml deploy/
        tar -czf deploy.tar.gz deploy/
    
    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package
        path: deploy.tar.gz
        retention-days: 30
